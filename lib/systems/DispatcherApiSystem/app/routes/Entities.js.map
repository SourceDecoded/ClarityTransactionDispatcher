{"version":3,"sources":["../../../../../src/systems/DispatcherApiSystem/app/routes/Entities.js"],"names":["express","Busboy","bodyParser","entityRouter","Router","jsonParser","json","post","request","response","api","locals","dispatcherApi","dispatcher","clarityTransactionDispatcher","entity","body","addEntityAsync","then","status","send","createdEntity","catch","message","error","get","lastId","query","pageSize","lastModifiedDate","lastCreatedDate","getCount","getEntitiesAsync","entities","getEntityCountAsync","count","toString","entityId","params","id","getEntityByIdAsync","patch","updateEntityAsync","updatedEntity","delete","removeEntityByIdAsync","removedEntity","getComponentsByEntityIdAsync","components","fileSystem","componentId","getFile","getComponentAsync","getFileReadStreamByIdAsync","component","fileId","fileStream","read","set","contentType","contentLength","pipe","addJsonComponent","addComponentAsync","newComponent","addFileComponent","busboy","headers","on","fieldName","file","fileName","encoding","mimeType","addFileAsync","data","type","updateJsonComponent","updateComponentAsync","updatedComponent","updateFileComponent","removeComponentAsync","removedComponent"],"mappings":"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","file":"Entities.js","sourcesContent":["import * as express from \"express\";\nimport * as Busboy from \"busboy\";\nimport * as bodyParser from \"body-parser\";\nimport ClarityTransactionDispatcher from \"./../../../../ClarityTransactionDispatcher\";\n\nconst entityRouter = express.Router();\nconst jsonParser = bodyParser.json();\n\nentityRouter.post(\"/\", jsonParser, (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entity = request.body;\n\n    dispatcher.addEntityAsync(entity).then(createdEntity => {\n        response.status(200).send(createdEntity);\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nentityRouter.get(\"/\", (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const lastId = request.query.lastId;\n    const pageSize = request.query.pageSize;\n    const lastModifiedDate = request.query.lastModifiedDate;\n    const lastCreatedDate = request.query.lastCreatedDate;\n    const getCount = request.query.getCount;\n\n    if (getCount !== \"true\") {\n        dispatcher.getEntitiesAsync({ lastId, pageSize, lastModifiedDate, lastCreatedDate }).then(entities => {\n            response.status(200).send(entities);\n        }).catch(error => {\n            response.status(400).send({ message: error.message });\n        });\n    } else {\n        dispatcher.getEntityCountAsync().then(count => {\n            response.status(200).send(count.toString());\n        }).catch(error => {\n            response.status(400).send({ message: error.message });\n        });\n    }\n});\n\nentityRouter.get(\"/:id\", (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.id;\n\n    dispatcher.getEntityByIdAsync(entityId).then(entity => {\n        response.status(200).send(entity);\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nentityRouter.patch(\"/:id\", jsonParser, (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.id;\n    const entity = request.body;\n\n    api.updateEntityAsync(entityId, entity).then(updatedEntity => {\n        response.status(200).send(updatedEntity);\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nentityRouter.delete(\"/:id\", (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.id;\n\n    api.removeEntityByIdAsync(entityId).then((removedEntity) => {\n        response.status(200).send(removedEntity);\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nentityRouter.get(\"/:id/components\", (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.id;\n\n    api.getComponentsByEntityIdAsync(entityId).then(components => {\n        response.status(200).send(components);\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nentityRouter.get(\"/:entityId/components/:componentId\", (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const fileSystem = response.locals.fileSystem;\n    const entityId = request.params.entityId;\n    const componentId = request.params.componentId;\n    const getFile = request.query.getFile;\n\n    api.getComponentAsync(componentId, entityId).then(component => {\n        if (getFile === \"true\") {\n            return fileSystem.getFileReadStreamByIdAsync(component.fileId).then(fileStream => {\n                try {\n                    fileStream.read();\n                } catch (error) {\n                    throw error;\n                }\n\n                response.set(\"Content-Type\", component.contentType);\n                response.set(\"Content-Length\", component.contentLength);\n\n                fileStream.pipe(response);\n            });\n        } else {\n            response.status(200).send(component);\n        }\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nentityRouter.post(\"/:id/components\", jsonParser, (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.id;\n\n    const addJsonComponent = () => {\n        const component = request.body;\n\n        api.addComponentAsync(entityId, component).then(newComponent => {\n            response.status(200).send(newComponent);\n        }).catch(error => {\n            response.status(400).send({ message: error.message });\n        });\n    };\n\n    const addFileComponent = () => {\n        const busboy = new Busboy({ headers: request.headers });\n\n        busboy.on(\"file\", (fieldName, file, fileName, encoding, mimeType) => {\n            api.addFileAsync(file).then(data => {\n                const component = {\n                    fileId: data.fileId,\n                    fileName,\n                    contentType: mimeType,\n                    contentLength: data.contentLength,\n                    type: \"file\"\n                };\n\n                return api.addComponentAsync(entityId, component);\n            }).then(newComponent => {\n                response.status(200).send(newComponent);\n            }).catch(error => {\n                response.status(400).send({ message: error.message });\n            });\n        });\n\n        busboy.on(\"error\", error => {\n            response.status(400).send({ message: error.message });\n        });\n\n        request.pipe(busboy);\n    };\n\n    if (request.headers[\"content-type\"] === \"application/json\") {\n        addJsonComponent();\n    } else {\n        addFileComponent();\n    }\n});\n\nentityRouter.patch(\"/:entityId/components/:componentId\", jsonParser, (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.entityId;\n    const componentId = request.params.componentId;\n\n    const updateJsonComponent = () => {\n        const component = request.body;\n\n        api.updateComponentAsync(componentId, entityId, component).then(updatedComponent => {\n            response.status(200).send(updatedComponent);\n        }).catch(error => {\n            response.status(400).send({ message: error.message });\n        });\n    };\n\n    const updateFileComponent = () => {\n        const busboy = new Busboy({ headers: request.headers });\n\n        busboy.on(\"file\", (fieldName, file, fileName, encoding, mimeType) => {\n            api.addFileAsync(file).then(data => {\n                const component = {\n                    fileId: data.fileId,\n                    fileName,\n                    contentType: mimeType,\n                    contentLength: data.contentLength,\n                    type: \"file\"\n                };\n\n                return api.updateComponentAsync(componentId, entityId, component);\n            }).then(updatedComponent => {\n                response.status(200).send(updatedComponent);\n            }).catch(error => {\n                response.status(400).send({ message: error.message });\n            });\n        });\n\n        busboy.on(\"error\", error => {\n            response.status(400).send({ message: error.message });\n        });\n\n        request.pipe(busboy);\n    };\n\n    if (request.headers[\"content-type\"] === \"application/json\") {\n        updateJsonComponent();\n    } else {\n        updateFileComponent();\n    }\n});\n\nentityRouter.delete(\"/:entityId/components/:componentId\", (request, response) => {\n    const api = response.locals.dispatcherApi;\n    const dispatcher = api.clarityTransactionDispatcher;\n    const entityId = request.params.entityId;\n    const componentId = request.params.componentId;\n\n    api.removeComponentAsync(componentId, entityId).then((removedComponent) => {\n        response.status(200).send(removedComponent);\n    }).catch(error => {\n        response.status(400).send({ message: error.message });\n    });\n});\n\nexport default entityRouter;"]}