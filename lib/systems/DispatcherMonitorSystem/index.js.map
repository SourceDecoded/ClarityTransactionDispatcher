{"version":3,"sources":["../../../src/systems/DispatcherMonitorSystem/index.js"],"names":["TRANSACTIONS_COLLECTION","UPTIMES_COLLECTION","LOGS_COLLECTION","DispatcherMonitorSystem","clarityTransactionDispatcher","app","io","ObjectID","guid","name","item","collectionName","_getDatabaseAsync","then","db","collection","insertOne","result","_id","insertedId","type","subType","message","data","log","createdDate","Date","_addItemToCollectionAsync","transaction","uptime","startDate","endDate","router","init","listen","console","server","createServer","on","client","obj","Array","isArray","Object","keys","forEach","key","$date","_convertToDates","emit","filter","findOne","Promise","resolve","reject","url","MongoClient","connect","error","getService","_initAPI","_initSocketIO","_addUptimeAsync","entity","_addTransactionAsync","_emitTransactionEvents","_addLogAsync","_emitLogEvents","catch","oldEntity","newEntity","warning","sort","$natural","logId","_findOneAsync","config","lastId","pageSize","$lt","find","limit","parseInt","toArray","transactionId","$gt","count"],"mappings":"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","file":"index.js","sourcesContent":["import http from \"http\";\nimport socketIO from \"socket.io\";\nimport mongodb from \"mongodb\";\nimport Router from \"./app/Router\";\n\nconst TRANSACTIONS_COLLECTION = \"transactions\";\nconst UPTIMES_COLLECTION = \"uptimes\";\nconst LOGS_COLLECTION = \"logs\";\n\nexport default class DispatcherMonitorSystem {\n\n    constructor() {\n        this.clarityTransactionDispatcher;\n        this.app;\n        this.io;\n        this.ObjectID = mongodb.ObjectID;\n        this.guid = \"3A07CA2A-1A79-4A79-98FE-B3FA747A9CB2\";\n        this.name = \"Dispatcher Monitor System\";\n    }\n\n    // SYSTEM PRIVATE METHODS\n    _addItemToCollectionAsync(item, collectionName) {\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(collectionName);\n        }).then((collection) => {\n            return collection.insertOne(item);\n        }).then((result) => {\n            item._id = result.insertedId;\n            return item;\n        });\n    }\n\n    _addLogAsync(type, subType, message, data) {\n        const log = {\n            type,\n            subType,\n            message,\n            data,\n            createdDate: new Date()\n        };\n\n        return this._addItemToCollectionAsync(log, LOGS_COLLECTION);\n    }\n\n    _addTransactionAsync(type, data) {\n        const transaction = {\n            type,\n            data,\n            createdDate: new Date()\n        };\n\n        return this._addItemToCollectionAsync(transaction, TRANSACTIONS_COLLECTION);\n    }\n\n    _addUptimeAsync() {\n        const uptime = {\n            startDate: new Date(),\n            endDate: null\n        };\n\n        return this._addItemToCollectionAsync(uptime, UPTIMES_COLLECTION);\n    }\n\n    _initAPI() {\n        const router = new Router(this.app, this);\n        router.init();\n\n        this.app.listen(3006, () => console.log(\"Monitor Server is running locally on port 3006...\"));\n    }\n\n    _initSocketIO() {\n        const server = http.createServer(this.app);\n        this.io = socketIO(server);\n\n        this.io.on(\"connection\", (client) => {\n            console.log(\"Monitor Client listening on port 3007...\")\n        });\n\n        server.listen(3007, () => console.log(\"Socket Monitor Server is running locally on port 3007...\"));\n    }\n\n    _convertToDates(obj) {\n        if (obj == null) {\n            return obj;\n        }\n\n        var result = Array.isArray(obj) ? [] : {};\n\n        Object.keys(obj).forEach((key) => {\n            if (obj[key] != null && obj[key].$date != null) {\n                result[key] = new Date(obj[key].$date);\n            } else if (obj[key] != null && typeof obj[key] === \"object\") {\n                result[key] = this._convertToDates(obj[key]);\n            } else {\n                result[key] = obj[key]\n            }\n        });\n\n        return result;\n    }\n\n    _emitLogEvents(type, log) {\n        this.io.emit(type, { log });\n        this.io.emit(\"allLogs\", { log });\n    }\n\n    _emitTransactionEvents(type, transaction) {\n        this.io.emit(type, { transaction });\n        this.io.emit(\"allTransactions\", { transaction });\n    }\n\n    _findOneAsync(collectionName, filter) {\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(collectionName);\n        }).then((collection) => {\n            return collection.findOne(filter);\n        });\n    }\n\n    _getDatabaseAsync() {\n        return new Promise((resolve, reject) => {\n            const url = \"mongodb://localhost:27017/ClarityTransactionDispatcherMonitor\";\n            const MongoClient = mongodb.MongoClient;\n\n            MongoClient.connect(url, (error, db) => {\n                if (error != null) {\n                    reject(error);\n                } else {\n                    resolve(db);\n                }\n            });\n        });\n    }\n\n    // SYSTEM LIFE CYCLE AND REQUIRED METHODS\n    activatedAsync(clarityTransactionDispatcher) {\n        this.clarityTransactionDispatcher = clarityTransactionDispatcher;\n        this.app = this.clarityTransactionDispatcher.getService(\"express\");\n\n        this._initAPI();\n        this._initSocketIO();\n        this._addUptimeAsync();\n    }\n\n    entityAddedAsync(entity) {\n        const type = \"entityAdded\";\n\n        this._addTransactionAsync(type, { entity }).then((transaction) => {\n            this._emitTransactionEvents(type, transaction);\n            return transaction.data;\n        }).then(data => {\n            return this._addLogAsync(\"transaction\", type, \"Entity Added Successfully\", data);\n        }).then(log => {\n            this._emitLogEvents(\"logTransaction\", log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    entityRemovedAsync(entity) {\n        const type = \"entityRemoved\";\n\n        this._addTransactionAsync(type, { entity }).then((transaction) => {\n            this._emitTransactionEvents(type, transaction);\n            return transaction.data;\n        }).then(data => {\n            return this._addLogAsync(\"transaction\", type, \"Entity Removed Successfully\", data);\n        }).then(log => {\n            this._emitLogEvents(\"logTransaction\", log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    entityRetrievedAsync(entity) {\n        const type = \"entityRetrieved\";\n\n        this._addTransactionAsync(type, { entity }).then((transaction) => {\n            this._emitTransactionEvents(type, transaction);\n            return transaction.data;\n        }).then(data => {\n            return this._addLogAsync(\"transaction\", type, \"Entity Retrieved Successfully\", data);\n        }).then(log => {\n            this._emitLogEvents(\"logTransaction\", log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    entityUpdatedAsync(oldEntity, newEntity) {\n        const type = \"entityUpdated\";\n\n        this._addTransactionAsync(type, { oldEntity, newEntity }).then((transaction) => {\n            this._emitTransactionEvents(type, transaction);\n            return transaction.data;\n        }).then(data => {\n            return this._addLogAsync(\"transaction\", type, \"Entity Updated Successfully\", data);\n        }).then(log => {\n            this._emitLogEvents(\"logTransaction\", log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    logError(error) {\n        const type = \"logError\";\n\n        this._addLogAsync(\"error\", error.type, error.message).then(log => {\n            this._emitLogEvents(type, log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    logMessage(message) {\n        const type = \"logMessage\";\n\n        this._addLogAsync(\"message\", message.type, message.message).then(log => {\n            this._emitLogEvents(type, log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    logWarning(warning) {\n        const type = \"logWarning\";\n\n        this._addLogAsync(\"warning\", warning.type, warning.message).then(log => {\n            this._emitLogEvents(type, log);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    getGuid() {\n        return this.guid;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    // SYSTEM SPECIFIC PUBLIC METHODS\n    getLatestUptimeAsync() {\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(UPTIMES_COLLECTION).findOne({}, { sort: { $natural: -1 } })\n        });\n    }\n\n    getLogByIdAsync(logId) {\n        const filter = { _id: this.ObjectID(logId) };\n\n        return this._findOneAsync(LOGS_COLLECTION, filter).then(log => {\n            return log;\n        });\n    }\n\n    getLogsAsync(config) {\n        var lastId = config.lastId;\n        var pageSize = config.pageSize < 50 ? config.pageSize : 50;\n\n        var sort = [[\"_id\", -1]];\n        var filter = {};\n\n        if (lastId != null) {\n            filter._id = {\n                $lt: this.ObjectID(lastId)\n            };\n        }\n\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(LOGS_COLLECTION).find(filter).limit(parseInt(pageSize, 10)).sort(sort).toArray();\n        });\n    }\n\n    getTransactionByIdAsync(transactionId) {\n        const filter = { _id: transactionId };\n\n        return this._findOneAsync(TRANSACTIONS_COLLECTION, filter).then(transaction => {\n            return transaction;\n        });\n    }\n\n    getTransactionsAsync(config) {\n        var lastId = config.lastId;\n        var pageSize = config.pageSize < 50 ? config.pageSize : 50;\n\n        var sort = [[\"_id\", 1]];\n        var filter = {};\n\n        if (lastId != null) {\n            filter._id = {\n                $gt: this.ObjectID(lastId)\n            };\n        }\n\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(TRANSACTIONS_COLLECTION).find(filter).limit(parseInt(pageSize, 10)).sort(sort).toArray();\n        });\n    }\n\n    getTransactionCountAsync(filter) {\n        filter = filter ? filter : {};\n        filter = this._convertToDates(filter);\n\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(TRANSACTIONS_COLLECTION);\n        }).then((collection) => {\n            return collection.find(filter).count();\n        });\n    }\n\n    getUptimesAsync(config) {\n        var lastId = config.lastId;\n        var pageSize = config.pageSize < 50 ? config.pageSize : 50;\n\n        var sort = [[\"_id\", 1]];\n        var filter = {};\n\n        if (lastId != null) {\n            filter._id = {\n                $gt: this.ObjectID(lastId)\n            };\n        }\n\n        return this._getDatabaseAsync().then((db) => {\n            return db.collection(UPTIMES_COLLECTION).find(filter).limit(parseInt(pageSize, 10)).sort(sort).toArray();\n        });\n    }\n}"]}