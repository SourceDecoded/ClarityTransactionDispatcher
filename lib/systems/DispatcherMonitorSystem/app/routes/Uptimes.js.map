{"version":3,"sources":["../../../../../src/systems/DispatcherMonitorSystem/app/routes/Uptimes.js"],"names":["express","uptimeRouter","Router","get","request","response","dispatcherMonitor","locals","getLatest","query","lastId","pageSize","getLatestUptimeAsync","then","status","send","uptime","catch","message","error","getUptimesAsync","uptimes"],"mappings":";;;;;;AAAA;;IAAYA,O;;;;AAEZ,IAAMC,eAAeD,QAAQE,MAAR,EAArB;;AAEAD,aAAaE,GAAb,CAAiB,GAAjB,EAAsB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACzC,QAAMC,oBAAoBD,SAASE,MAAT,CAAgBD,iBAA1C;AACA,QAAME,YAAYJ,QAAQK,KAAR,CAAcD,SAAhC;AACA,QAAME,SAASN,QAAQK,KAAR,CAAcC,MAA7B;AACA,QAAMC,WAAWP,QAAQK,KAAR,CAAcE,QAA/B;;AAEA,QAAIH,cAAc,MAAlB,EAA0B;AACtBF,0BAAkBM,oBAAlB,GAAyCC,IAAzC,CAA8C,kBAAU;AACpDR,qBAASS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BC,MAA1B;AACH,SAFD,EAEGC,KAFH,CAES,iBAAS;AACdZ,qBAASS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,EAAEG,SAASC,MAAMD,OAAjB,EAA1B;AACH,SAJD;AAKH,KAND,MAMO;AACHZ,0BAAkBc,eAAlB,CAAkC,EAAEV,cAAF,EAAUC,kBAAV,EAAlC,EAAwDE,IAAxD,CAA6D,mBAAW;AACpER,qBAASS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BM,OAA1B;AACH,SAFD,EAEGJ,KAFH,CAES,iBAAS;AACdZ,qBAASS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,EAAEG,SAASC,MAAMD,OAAjB,EAA1B;AACH,SAJD;AAKH;AACJ,CAnBD;;kBAqBejB,Y","file":"Uptimes.js","sourcesContent":["import * as express from \"express\";\n\nconst uptimeRouter = express.Router();\n\nuptimeRouter.get(\"/\", (request, response) => {\n    const dispatcherMonitor = response.locals.dispatcherMonitor;\n    const getLatest = request.query.getLatest;\n    const lastId = request.query.lastId;\n    const pageSize = request.query.pageSize;\n\n    if (getLatest === \"true\") {\n        dispatcherMonitor.getLatestUptimeAsync().then(uptime => {\n            response.status(200).send(uptime);\n        }).catch(error => {\n            response.status(400).send({ message: error.message });\n        });\n    } else {\n        dispatcherMonitor.getUptimesAsync({ lastId, pageSize }).then(uptimes => {\n            response.status(200).send(uptimes);\n        }).catch(error => {\n            response.status(400).send({ message: error.message });\n        });\n    }\n});\n\nexport default uptimeRouter;"]}