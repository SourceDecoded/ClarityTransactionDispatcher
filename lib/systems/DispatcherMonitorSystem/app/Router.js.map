{"version":3,"sources":["../../../../src/systems/DispatcherMonitorSystem/app/Router.js"],"names":["Router","app","dispatcherMonitor","use","request","response","next","header","locals","error","status","send","message"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,M;AACjB,oBAAYC,GAAZ,EAAiBC,iBAAjB,EAAoC;AAAA;;AAChC,aAAKD,GAAL,GAAWA,GAAX;AACA,aAAKC,iBAAL,GAAyBA,iBAAzB;AACH;;;;+BAEM;AAAA;;AACH,iBAAKD,GAAL,CAASE,GAAT,CAAa,UAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AACtCD,yBAASE,MAAT,CAAgB,6BAAhB,EAA+C,GAA/C;AACAF,yBAASE,MAAT,CAAgB,8BAAhB,EAAgD,0BAAhD;AACAF,yBAASE,MAAT,CAAgB,8BAAhB,EAAgD,6BAAhD;AACAF,yBAASG,MAAT,CAAgBN,iBAAhB,GAAoC,MAAKA,iBAAzC;AACAI;AACH,aAND;;AAQA,iBAAKL,GAAL,CAASE,GAAT,CAAa,cAAb;AACA,iBAAKF,GAAL,CAASE,GAAT,CAAa,mBAAb;AACA,iBAAKF,GAAL,CAASE,GAAT,CAAa,WAAb;;AAEA,iBAAKF,GAAL,CAASE,GAAT,CAAa,UAACM,KAAD,EAAQL,OAAR,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAoC;AAC7C,oBAAIG,KAAJ,EAAW;AACPJ,6BAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,EAAEC,SAASH,MAAMG,OAAjB,EAA1B;AACH,iBAFD,MAEO;AACHN;AACH;AACJ,aAND;AAOH;;;;;;kBA1BgBN,M","file":"Router.js","sourcesContent":["import uptimesRoute from \"./routes/Uptimes\";\nimport transactionsRoute from \"./routes/Transactions\";\nimport logsRoute from \"./routes/Logs\";\n\nexport default class Router {\n    constructor(app, dispatcherMonitor) {\n        this.app = app;\n        this.dispatcherMonitor = dispatcherMonitor;\n    }\n\n    init() {\n        this.app.use((request, response, next) => {\n            response.header(\"Access-Control-Allow-Origin\", \"*\");\n            response.header(\"Access-Control-Allow-Methods\", \"GET, PATCH, POST, DELETE\");\n            response.header(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n            response.locals.dispatcherMonitor = this.dispatcherMonitor;\n            next();\n        });\n\n        this.app.use(\"/api/uptimes\", uptimesRoute);\n        this.app.use(\"/api/transactions\", transactionsRoute);\n        this.app.use(\"/api/logs\", logsRoute);\n\n        this.app.use((error, request, response, next) => {\n            if (error) {\n                response.status(400).send({ message: error.message });\n            } else {\n                next();\n            }\n        });\n    }\n}"]}