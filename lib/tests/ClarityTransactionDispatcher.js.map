{"version":3,"sources":["../../src/tests/ClarityTransactionDispatcher.js"],"names":["clarityPackage","ClarityTransactionDispatcher","MongoDb","DATABASE_NAME","mongoDb","exports","clean","getDatabaseAsync","then","db","Promise","all","collection","remove","prepare","destroy","resolve","reject","dropDatabase","error","result","throws","dispatcher","startAsync","equal","isInitialized","stopAsync","calledPrepare","calledValidate","system","prepareEntityToBeAddedAsync","entity","validateEntityToBeAddedAsync","getName","getGuid","addSystemAsync","addEntityAsync","components","type","find","toArray","results","length","addServiceAsync","catch","service","services","isActivated","activatedAsync","initializeAsync","isDeactivated","deactivatedAsync","deactivateSystemAsync","isDisposed","disposedAsync","disposeSystemAsync","today","Date","setTime","getEntitiesAsync","pageSize","lastCreatedDate","lastModifiedDate","lastId","_id","createDate","modifiedDate","getEntityByIdAsync","toString","getEntityCountAsync","count","getService","systems","getSystems","hasLogged","logErrorAsync","Error","logMessage","logMessageAsync","message","logWarningAsync","askedForApproval","approveEntityToBeRemovedAsync","removeEntityAsync","entities","threw","removeServiceAsync","fail","ok","prepareEntityToBeUpdatedAsync","validateEntityToBeUpdatedAsync","push","prop","updateEntityAsync"],"mappings":"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","file":"ClarityTransactionDispatcher.js","sourcesContent":["import assert from \"assert\";\nimport * as clarityPackage from \"./../index\";\n\nconst ClarityTransactionDispatcher = clarityPackage.ClarityTransactionDispatcher;\nconst MongoDb = clarityPackage.MongoDb;\n\nconst DATABASE_NAME = \"clarity_transaction_dispatcher\";\n\nvar mongoDb = null;\n\nexports.clean = function () {\n    return mongoDb.getDatabaseAsync(DATABASE_NAME).then((db) => {\n        return Promise.all([\n            db.collection(\"entities\").remove({}),\n            db.collection(\"systemData\").remove({})\n        ]);\n    });\n};\n\nexports.prepare = function () {\n    mongoDb = new MongoDb();\n};\n\nexports.destroy = function () {\n    return mongoDb.getDatabaseAsync(DATABASE_NAME).then(() => {\n        return new Promise((resolve, reject) => {\n            db.dropDatabase((error, result) => {\n                if (error != null) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            });\n        });\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.constructor: Empty\"] = function () {\n    assert.throws((error) => {\n        var dispatcher = new ClarityTransactionDispatcher();\n    }, \"Expected the constructor to throw an error.\");\n};\n\nexports[\"ClarityTransactionDispatcher.constructor: With MongoDb\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n};\n\nexports[\"ClarityTransactionDispatcher.startAsync\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    return dispatcher.startAsync().then(() => {\n        assert.equal(dispatcher.isInitialized, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.stopAsync\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    return dispatcher.startAsync().then(() => {\n        assert.equal(dispatcher.isInitialized, true);\n        return dispatcher.stopAsync();\n    }).then(() => {\n        assert.equal(dispatcher.isInitialized, false);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.addEntityAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var calledPrepare = false;\n    var calledValidate = false;\n\n    var system = {\n        prepareEntityToBeAddedAsync: (entity) => {\n            calledPrepare = true;\n            return Promise.resolve();\n        },\n        validateEntityToBeAddedAsync: (entity) => {\n            calledValidate = true;\n            return Promise.resolve();\n        },\n        getName: () => {\n            return \"Test\";\n        },\n        getGuid: () => {\n            return \"Test\";\n        }\n    };\n\n    var collection = null;\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test\" }] });\n    }).then(() => {\n        return mongoDb.getDatabaseAsync(DATABASE_NAME);\n    }).then((db) => {\n        collection = db.collection(\"entities\");\n        return collection.find().toArray();\n    }).then((results) => {\n        assert.equal(results.length, 1);\n        assert.equal(calledValidate, true);\n        assert.equal(calledPrepare, true);\n    }).then(() => {\n        return collection.remove({});\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.addServiceAsync without invoking startAsync.\"] = function () {\n    assert.throws(() => {\n        var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n        dispatcher.addServiceAsync({}).then(resolve).catch(reject);\n    }, \"Expected to throw an error without invoking startAsync first.\");\n};\n\nexports[\"ClarityTransactionDispatcher.addServiceAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addServiceAsync(\"myService\", service);\n    }).then(() => {\n        assert.equal(dispatcher.services[\"myService\"], service);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.addSystemAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    var isActivated = false;\n    var isInitialized = false;\n\n    var system = {\n        activatedAsync: () => {\n            isActivated = true;\n        },\n        initializeAsync: () => {\n            isInitialized = true;\n        },\n        getGuid: () => {\n            return \"test\"\n        },\n        getName: () => {\n            return \"Test\"\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        assert.equal(isActivated, true);\n        assert.equal(isInitialized, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.deactivateSystemAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    var isActivated = false;\n    var isInitialized = false;\n    var isDeactivated = false;\n\n    var system = {\n        activatedAsync: () => {\n            isActivated = true;\n        },\n        initializeAsync: () => {\n            isInitialized = true;\n        },\n        deactivatedAsync: () => {\n            isDeactivated = true;\n        },\n        getGuid: () => {\n            return \"test\"\n        },\n        getName: () => {\n            return \"Test\"\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        assert.equal(isActivated, true);\n        assert.equal(isInitialized, true);\n    }).then(() => {\n        return dispatcher.deactivateSystemAsync(system);\n    }).then(() => {\n        assert.equal(isDeactivated, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.disposeSystemAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    var isActivated = false;\n    var isInitialized = false;\n    var isDeactivated = false;\n    var isDisposed = false;\n\n    var system = {\n        activatedAsync: () => {\n            isActivated = true;\n        },\n        initializeAsync: () => {\n            isInitialized = true;\n        },\n        deactivatedAsync: () => {\n            isDeactivated = true;\n        },\n        disposedAsync: () => {\n            isDisposed = true;\n        },\n        getGuid: () => {\n            return \"test\"\n        },\n        getName: () => {\n            return \"Test\"\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        assert.equal(isActivated, true);\n        assert.equal(isInitialized, true);\n    }).then(() => {\n        return dispatcher.disposeSystemAsync(system);\n    }).then(() => {\n        assert.equal(isDeactivated, false);\n        assert.equal(isDisposed, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getEntitiesAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var today = new Date();\n    today.setTime(0, 0, 0, 0);\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test1\" }] });\n    }).then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test2\" }] });\n    }).then(() => {\n        return dispatcher.getEntitiesAsync({\n            pageSize: 1,\n            lastCreatedDate: today,\n            lastModifiedDate: today\n        });\n    }).then((results) => {\n        var entity = results[0];\n\n        assert.equal(results.length, 1);\n        assert.equal(entity.components[0].type, \"test1\");\n\n        return dispatcher.getEntitiesAsync({\n            pageSize: 1,\n            lastId: results[0]._id,\n            lastCreatedDate: entity.createDate,\n            lastModifiedDate: entity.modifiedDate\n        });\n    }).then((results) => {\n        var entity = results[0];\n\n        assert.equal(results.length, 1);\n        assert.equal(entity.components[0].type, \"test2\");\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getEntityByIdAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var today = new Date();\n    today.setTime(0, 0, 0, 0);\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test1\" }] });\n    }).then(() => {\n        return dispatcher.getEntitiesAsync({\n            pageSize: 1\n        });\n    }).then((results) => {\n        var entity = results[0];\n\n        assert.equal(results.length, 1);\n        assert.equal(entity.components[0].type, \"test1\");\n\n        return dispatcher.getEntityByIdAsync(entity._id.toString());\n    }).then((entity) => {\n        assert.equal(entity.components[0].type, \"test1\");\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getEntityCountAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var today = new Date();\n    today.setTime(0, 0, 0, 0);\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test1\" }] });\n    }).then(() => {\n        return dispatcher.getEntityCountAsync();\n    }).then((count) => {\n        assert.equal(count, 1);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getService.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addServiceAsync(\"testService\", service);\n    }).then(() => {\n        assert.equal(service, dispatcher.getService(\"testService\"));\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getSystems.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var system = {\n        getGuid: () => { },\n        getName: () => { }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        var systems = dispatcher.getSystems();\n\n        assert.equal(systems.length, 1);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.logErrorAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var hasLogged = false;\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        logErrorAsync: () => {\n            hasLogged = true;\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.logErrorAsync(new Error(\"Something bad happened.\"))\n    }).then(() => {\n        assert.equal(hasLogged, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.logMessageAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var hasLogged = false;\n    var logMessage = null;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        logMessageAsync: (message) => {\n            logMessage = message;\n            hasLogged = true;\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.logMessageAsync(\"Message\");\n    }).then(() => {\n        assert.equal(logMessage, \"Message\");\n        assert.equal(hasLogged, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.logWarningAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var hasLogged = false;\n    var logMessage = null;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        logWarningAsync: (message) => {\n            logMessage = message;\n            hasLogged = true;\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.logWarningAsync(\"Message\");\n    }).then(() => {\n        assert.equal(logMessage, \"Message\");\n        assert.equal(hasLogged, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeEntityAsync: Approve removal.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var askedForApproval = false;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        approveEntityToBeRemovedAsync: (entity) => {\n            askedForApproval = true;\n            return Promise.resolve(null);\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.addEntityAsync({\n            components: [\n                {\n                    type: \"test\"\n                }\n            ]\n        });\n    }).then((entity) => {\n        return dispatcher.removeEntityAsync(entity);\n    }).then(() => {\n        return dispatcher.getEntitiesAsync();\n    }).then((entities) => {\n        assert.equal(entities.length, 0);\n        assert.equal(askedForApproval, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeEntityAsync: Reject removal.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var askedForApproval = false;\n    var threw = false;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        approveEntityToBeRemovedAsync: (entity) => {\n            askedForApproval = true;\n            return Promise.reject(null);\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.addEntityAsync({\n            components: [\n                {\n                    type: \"test\"\n                }\n            ]\n        });\n    }).then((entity) => {\n        return dispatcher.removeEntityAsync(entity);\n    }).catch(() => {\n        threw = true;\n    }).then(() => {\n        return dispatcher.getEntitiesAsync();\n    }).then((entities) => {\n        assert.equal(entities.length, 1);\n        assert.equal(askedForApproval, true);\n        assert.equal(threw, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeServiceAsync: Remove existing service.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addServiceAsync(\"test\", service);\n    }).then(() => {\n        assert.equal(dispatcher.getService(\"test\"), service);\n    }).then(() => {\n        return dispatcher.removeServiceAsync(\"test\");\n    }).then(() => {\n        assert.equal(dispatcher.getService(\"test\"), null);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeServiceAsync: Remove non-existing service, expect it to throw.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        dispatcher.removeServiceAsync(\"test\").then(() => {\n            assert.fail(true);\n        }).catch((error) => {\n            assert.ok(true);\n        });\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.stopAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var isDeactivated = false;\n\n    var system = {\n        deactivatedAsync: () => {\n            isDeactivated = true;\n        },\n        getName: () => {\n            return \"Test\";\n        },\n        getGuid: () => {\n            return \"Test\";\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.stopAsync();\n    }).then(() => {\n        assert.equal(isDeactivated, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.updateEntityAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var calledPrepare = false;\n    var calledValidate = false;\n\n    var system = {\n        prepareEntityToBeUpdatedAsync: (entity) => {\n            calledPrepare = true;\n            return Promise.resolve();\n        },\n        validateEntityToBeUpdatedAsync: (entity) => {\n            calledValidate = true;\n            return Promise.resolve();\n        },\n        getName: () => {\n            return \"Test\";\n        },\n        getGuid: () => {\n            return \"Test\";\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.addEntityAsync({});\n    }).then((entity) => {\n        entity.components.push({\n            type: \"comp\",\n            prop: \"foo\"\n        });\n        return dispatcher.updateEntityAsync(entity);\n    }).then(() => {\n        assert.equal(calledValidate, true);\n        assert.equal(calledPrepare, true);\n    });\n};\n"]}