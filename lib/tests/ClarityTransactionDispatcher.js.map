{"version":3,"sources":["../../src/tests/ClarityTransactionDispatcher.js"],"names":["mongoDb","exports","clean","getDatabaseAsync","then","db","Promise","all","collection","remove","prepare","isInMemory","startAsync","destroy","throws","error","dispatcher","equal","isInitialized","stopAsync","entity","addEntityAsync","components","type","find","toArray","results","length","addServiceAsync","service","services","isActivated","system","activatedAsync","initializeAsync","getGuid","getName","addSystemAsync","isDeactivated","deactivatedAsync","deactivateSystemAsync","isDisposed","disposeAsync","disposeSystemAsync","today","Date","setTime","getEntitiesAsync","pageSize","lastCreatedDate","lastModifiedDate","lastId","_id","createDate","modifiedDate","getEntityByIdAsync","toString","getEntityCountAsync","count","getService","systems","getSystems","hasLogged","logError","Error","logMessage","message","logWarning","askedForApproval","approveEntityToBeRemovedAsync","resolve","removeEntityAsync","entities","threw","reject","catch","removeServiceAsync","fail","ok"],"mappings":"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","file":"ClarityTransactionDispatcher.js","sourcesContent":["import assert from \"assert\";\nimport { ClarityTransactionDispatcher, MongoDb } from \"./../index\";\n\nvar mongoDb = null;\n\nexports.clean = function () {\n    return mongoDb.getDatabaseAsync().then((db) => {\n        return Promise.all([\n            db.collection(\"entities\").remove({}),\n            db.collection(\"systemData\").remove({})\n        ]);\n    });\n};\n\nexports.prepare = function () {\n    mongoDb = new MongoDb({\n        isInMemory: true\n    });\n    return mongoDb.startAsync();\n};\n\nexports.destroy = function () {\n};\n\nexports[\"ClarityTransactionDispatcher.constructor: Empty\"] = function () {\n    assert.throws((error) => {\n        var dispatcher = new ClarityTransactionDispatcher();\n    }, \"Expected the constructor to throw an error.\");\n};\n\nexports[\"ClarityTransactionDispatcher.constructor: With MongoDb\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n};\n\nexports[\"ClarityTransactionDispatcher.startAsync\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    return dispatcher.startAsync().then(() => {\n        assert.equal(mongoDb.isInitialized, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.stopAsync\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    return dispatcher.startAsync().then(() => {\n        assert.equal(mongoDb.isInitialized, true);\n        return dispatcher.stopAsync();\n    }).then(() => {\n        assert.equal(mongoDb.isInitialized, false);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.addEntityAsync without invoking startAsync.\"] = function () {\n    assert.throws(() => {\n        var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n        var entity = {};\n        dispatcher.addEntityAsync(entity);\n    }, \"Expected to throw an error without invoking startAsync first.\");\n\n};\n\nexports[\"ClarityTransactionDispatcher.addEntityAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var collection = null;\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test\" }] });\n    }).then(() => {\n        return mongoDb.getDatabaseAsync();\n    }).then((db) => {\n        collection = db.collection(\"entities\");\n        return collection.find().toArray();\n    }).then((results) => {\n        assert.equal(results.length, 1);\n    }).then(() => {\n        return collection.remove({});\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.addServiceAsync without invoking startAsync.\"] = function () {\n    assert.throws(() => {\n        var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n        dispatcher.addServiceAsync({});\n    }, \"Expected to throw an error without invoking startAsync first.\");\n\n};\n\nexports[\"ClarityTransactionDispatcher.addServiceAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addServiceAsync(\"myService\", service);\n    }).then(() => {\n        assert.equal(dispatcher.services[\"myService\"], service);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.addSystemAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    var isActivated = false;\n    var isInitialized = false;\n\n    var system = {\n        activatedAsync: () => {\n            isActivated = true;\n        },\n        initializeAsync: () => {\n            isInitialized = true;\n        },\n        getGuid: () => {\n            return \"test\"\n        },\n        getName: () => {\n            return \"Test\"\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        assert.equal(isActivated, true);\n        assert.equal(isInitialized, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.deactivateSystemAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    var isActivated = false;\n    var isInitialized = false;\n    var isDeactivated = false;\n\n    var system = {\n        activatedAsync: () => {\n            isActivated = true;\n        },\n        initializeAsync: () => {\n            isInitialized = true;\n        },\n        deactivatedAsync: () => {\n            isDeactivated = true;\n        },\n        getGuid: () => {\n            return \"test\"\n        },\n        getName: () => {\n            return \"Test\"\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        assert.equal(isActivated, true);\n        assert.equal(isInitialized, true);\n    }).then(() => {\n        return dispatcher.deactivateSystemAsync(system);\n    }).then(() => {\n        assert.equal(isDeactivated, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.disposeSystemAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    var isActivated = false;\n    var isInitialized = false;\n    var isDeactivated = false;\n    var isDisposed = false;\n\n    var system = {\n        activatedAsync: () => {\n            isActivated = true;\n        },\n        initializeAsync: () => {\n            isInitialized = true;\n        },\n        deactivatedAsync: () => {\n            isDeactivated = true;\n        },\n        disposeAsync: () => {\n            isDisposed = true;\n        },\n        getGuid: () => {\n            return \"test\"\n        },\n        getName: () => {\n            return \"Test\"\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        assert.equal(isActivated, true);\n        assert.equal(isInitialized, true);\n    }).then(() => {\n        return dispatcher.disposeSystemAsync(system);\n    }).then(() => {\n        assert.equal(isDeactivated, false);\n        assert.equal(isDisposed, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getEntitiesAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var today = new Date();\n    today.setTime(0, 0, 0, 0);\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test1\" }] });\n    }).then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test2\" }] });\n    }).then(() => {\n        return dispatcher.getEntitiesAsync({\n            pageSize: 1,\n            lastCreatedDate: today,\n            lastModifiedDate: today\n        });\n    }).then((results) => {\n        var entity = results[0];\n\n        assert.equal(results.length, 1);\n        assert.equal(entity.components[0].type, \"test1\");\n\n        return dispatcher.getEntitiesAsync({\n            pageSize: 1,\n            lastId: results[0]._id,\n            lastCreatedDate: entity.createDate,\n            lastModifiedDate: entity.modifiedDate\n        });\n    }).then((results) => {\n        var entity = results[0];\n\n        assert.equal(results.length, 1);\n        assert.equal(entity.components[0].type, \"test2\");\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getEntityByIdAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var today = new Date();\n    today.setTime(0, 0, 0, 0);\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test1\" }] });\n    }).then(() => {\n        return dispatcher.getEntitiesAsync({\n            pageSize: 1\n        });\n    }).then((results) => {\n        var entity = results[0];\n\n        assert.equal(results.length, 1);\n        assert.equal(entity.components[0].type, \"test1\");\n\n        return dispatcher.getEntityByIdAsync(entity._id.toString());\n    }).then((entity) => {\n        assert.equal(entity.components[0].type, \"test1\");\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getEntityCountAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var today = new Date();\n    today.setTime(0, 0, 0, 0);\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addEntityAsync({ components: [{ type: \"test1\" }] });\n    }).then(() => {\n        return dispatcher.getEntityCountAsync();\n    }).then((count) => {\n        assert.equal(count, 1);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getService.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addServiceAsync(\"testService\", service);\n    }).then(() => {\n        assert.equal(service, dispatcher.getService(\"testService\"));\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.getSystems.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var system = {\n        getGuid: () => { },\n        getName: () => { }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        var systems = dispatcher.getSystems();\n\n        assert.equal(systems.length, 1);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.logError.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var hasLogged = false;\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        logError: () => {\n            hasLogged = true;\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        dispatcher.logError(new Error(\"Something bad happened.\"));\n        assert.equal(hasLogged, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.logMessage.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var hasLogged = false;\n    var logMessage = null;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        logMessage: (message) => {\n            logMessage = message;\n            hasLogged = true;\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        dispatcher.logMessage(\"Message\");\n        assert.equal(logMessage, \"Message\");\n        assert.equal(hasLogged, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.logWarning.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var hasLogged = false;\n    var logMessage = null;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        logWarning: (message) => {\n            logMessage = message;\n            hasLogged = true;\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        dispatcher.logWarning(\"Message\");\n        assert.equal(logMessage, \"Message\");\n        assert.equal(hasLogged, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeEntityAsync: Approve removal.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var askedForApproval = false;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        approveEntityToBeRemovedAsync: (entity) => {\n            askedForApproval = true;\n            return Promise.resolve(null);\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.addEntityAsync({\n            components: [\n                {\n                    type: \"test\"\n                }\n            ]\n        });\n    }).then((entity) => {\n        return dispatcher.removeEntityAsync(entity);\n    }).then(() => {\n        return dispatcher.getEntitiesAsync();\n    }).then((entities) => {\n        assert.equal(entities.length, 0);\n        assert.equal(askedForApproval, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeEntityAsync: Reject removal.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var askedForApproval = false;\n    var threw = false;\n\n    var system = {\n        getGuid: () => { },\n        getName: () => { },\n        approveEntityToBeRemovedAsync: (entity) => {\n            askedForApproval = true;\n            return Promise.reject(null);\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.addEntityAsync({\n            components: [\n                {\n                    type: \"test\"\n                }\n            ]\n        });\n    }).then((entity) => {\n        return dispatcher.removeEntityAsync(entity);\n    }).catch(() => {\n        threw = true;\n    }).then(() => {\n        return dispatcher.getEntitiesAsync();\n    }).then((entities) => {\n        assert.equal(entities.length, 1);\n        assert.equal(askedForApproval, true);\n        assert.equal(threw, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeServiceAsync: Remove existing service.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addServiceAsync(\"test\", service);\n    }).then(() => {\n        assert.equal(dispatcher.getService(\"test\"), service);\n    }).then(() => {\n        return dispatcher.removeServiceAsync(\"test\");\n    }).then(() => {\n        assert.equal(dispatcher.getService(\"test\"), null);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.removeServiceAsync: Remove non-existing service, expect it to throw.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var service = {};\n\n    return dispatcher.startAsync().then(() => {\n        dispatcher.removeServiceAsync(\"test\").then(() => {\n            assert.fail(true);\n        }).catch((error) => {\n            assert.ok(true);\n        });\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.startAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n\n    return dispatcher.startAsync().then(() => {\n        assert.equal(dispatcher.isInitialized, true);\n    });\n};\n\nexports[\"ClarityTransactionDispatcher.stopAsync.\"] = function () {\n    var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n    var isDeactivated = false;\n\n    var system = {\n        deactivatedAsync: () => {\n            isDeactivated = true;\n        },\n        getName: ()=>{\n            return \"Test\";\n        },\n        getGuid: ()=>{\n            return \"Test\";\n        }\n    };\n\n    return dispatcher.startAsync().then(() => {\n        return dispatcher.addSystemAsync(system);\n    }).then(() => {\n        return dispatcher.stopAsync();\n    }).then(() => {\n        assert.equal(isDeactivated, true);\n    });\n};\n\n// exports[\"ClarityTransactionDispatcher.updateEntityAsync.\"] = function () {\n//     var dispatcher = new ClarityTransactionDispatcher(mongoDb);\n//     var isDeactivated = false;\n\n//     var system = {\n//         prepareEntityToBeUpdatedAsync: (entity) => {\n//             return Promise.resolve();\n//         },\n//         validateEntityToBeUpdatedAsync:(entity)=>{\n//             return Promise.resolve();\n//         },\n//         getName: ()=>{\n//             return \"Test\";\n//         },\n//         getGuid: ()=>{\n//             return \"Test\";\n//         }\n//     };\n\n//     return dispatcher.startAsync().then(() => {\n//         return dispatcher.addSystemAsync(system);\n//     }).then(() => {\n//         return dispatcher.stopAsync();\n//     }).then(() => {\n//         assert.equal(isDeactivated, true);\n//     });\n// };\n"]}