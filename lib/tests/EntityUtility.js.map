{"version":3,"sources":["../../src/tests/EntityUtility.js"],"names":[],"mappings":";;AAAA;;;;AACA","file":"EntityUtility.js","sourcesContent":["import assert from \"assert\";\nimport EntityUtility from \"./../EntityUtility\";\n\n// class Entity {\n//     constructor() {\n//         this.components = [];\n//         this.components.push(\n//             {\n//                 type: \"test\"\n//             },\n//             {\n\n//                 type: \"test\",\n//                 prop: \"secondTest\"\n//             },\n//             {\n//                 type: \"test-2\",\n//                 prop: \"value\"\n//             }\n//         );\n//     }\n// }\n\n// exports[\"EntityUtility.constructor\"] = function () {\n//     var entityUtility = new EntityUtility();\n//     assert.equal(entityUtility.entity, null);\n\n//     var entity = new Entity();\n\n//     entityUtility = new EntityUtility(entity);\n\n//     assert.equal(entityUtility.entity, entity);\n// };\n\n// exports[\"EntityUtility.constructor: act without setting an entity.\"] = function () {\n//     assert.throws(() => {\n//         var entityUtility = new EntityUtility();\n//         entityUtility.hasComponent(\"test\");\n//     });\n// };\n\n// exports[\"EntityUtility.getComponent\"] = function () {\n//     var entity = new Entity();\n//     var entityUtility = new EntityUtility(entity);\n\n//     assert.equal(entityUtility.getComponent(\"test\"), entity.components[0]);\n// };\n\n// exports[\"EntityUtility.getComponents\"] = function () {\n//     var entity = new Entity();\n//     var entityUtility = new EntityUtility(entity);\n\n//     var components = entityUtility.getComponents(\"test\");\n\n//     assert.equal(components[0], entity.components[0]);\n//     assert.equal(components[1], entity.components[1]);\n//     assert.equal(components.length, 2);\n\n// };\n\n// exports[\"EntityUtility.hasComponent\"] = function () {\n//     var entity = new Entity();\n//     var entityUtility = new EntityUtility(entity);\n\n//     assert.equal(entityUtility.hasComponent(\"test\"), true);\n// };\n\n// exports[\"EntityUtility.hasTypeComposition\"] = function () {\n//     var entity = new Entity();\n//     var entityUtility = new EntityUtility(entity);\n\n//     var result = entityUtility.hasTypeComposition([\"test\", \"test-2\"]);\n\n//     assert.equal(result, true);\n// }; \n"]}