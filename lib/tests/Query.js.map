{"version":3,"sources":["../../src/tests/Query.js"],"names":[],"mappings":";;AAAA;;;;AACA","file":"Query.js","sourcesContent":["import assert from \"assert\";\nimport { MongoDb } from \"./../index\";\n\n// const DATABASE_NAME = \"clarity_transaction_dispatcher\";\n// var mongoDb = null;\n\n// var types = [\n//     \"post\",\n//     \"comment\",\n//     \"authorization\",\n//     \"group\",\n//     \"user\",\n//     \"governance\"\n// ];\n\n// var versions = [\n//     \"0.0.1\",\n//     \"0.0.2\",\n//     \"0.0.3\",\n//     \"0.0.4\",\n// ];\n\n// var getRandomType = () => {\n//     var index = parseInt(Math.random() * types.length, 10);\n//     return types[index];\n// };\n\n// var getRandomVersion = () => {\n//     var index = parseInt(Math.random() * versions.length, 10);\n//     return versions[index];\n// };\n\n// var createRandomComponent = () => {\n//     var component = {\n//         type: getRandomType(),\n//         version: getRandomVersion()\n//     };\n\n//     return component;\n// };\n\n// var createRandomEntity = () => {\n//     var entity = {\n//         _id: objectId(),\n//         components: []\n//     };\n\n//     var amountOfComponents = parseInt(Math.random() * 10, 10);\n\n//     for (var x = 0; x < amountOfComponents; x++) {\n//         entity.components.push(createRandomComponent());\n//     }\n\n//     return entity;\n// };\n\n// var createEntitiesAsync = (amount, batchSize = 10000) => {\n//     var batchAmount = amount / batchSize;\n\n//     var batches = [];\n//     for (var x = 0; x < batchAmount; x++) {\n//         batches.push(new Batch(createRandomEntity, batchSize));\n//     }\n\n//     batches.reduce((promise, batch) => {\n//         return promise.then(() => {\n//             return batch.createEntitiesAsync();\n//         });\n\n//     }, Promise.resolve()).then(() => {\n//         console.log(\"DONE\");\n//     });\n// }\n\n// class Batch {\n\n//     constructor(factory, size) {\n//         this.factory = factory;\n//         this.size = size;\n//     }\n\n//     createEntitiesAsync() {\n//         return mongodb.getDatabaseAync(DATABASE_NAME).then((db) => {\n//             var entities = [];\n//             for (var x = 0; x < this.size; x++) {\n//                 entities.push(this.factory());\n//             }\n\n//             return entities.map((entity) => {\n//                 return db.collection(\"entities\").insert(entity);\n//             });\n//         });\n//     }\n\n// }\n\n// exports.clean = function () {\n//     return mongoDb.getDatabaseAsync(DATABASE_NAME).then((db) => {\n//         return Promise.all([\n//             db.collection(\"entities\").remove({}),\n//             db.collection(\"systemData\").remove({})\n//         ]);\n//     });\n// };\n\n// exports.prepare = function () {\n//     mongoDb = new MongoDb({\n//         isInMemory: true\n//     });\n//     return mongoDb.startAsync().then(()=>{\n//         return mongoDb.getDatabaseAsync(DATABASE_NAME);\n//     }).then((db)=>{\n//         db.insert()\n//     });\n// };\n\n// exports.destroy = function () {\n// };\n\n"]}