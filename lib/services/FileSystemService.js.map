{"version":3,"sources":["../../src/services/FileSystemService.js"],"names":["FileSystemService","config","mongodb","MongoClient","ObjectID","databaseUrl","GridFs","connect","_getDatabaseAsync","then","db","id","_getGridFsAsync","gfs","createReadStream","_id","catch","error","newFileId","createWriteStream","Promise","resolve","reject","remove"],"mappings":";;;;;;;;;;IAAqBA,iB;AACjB,+BAAYC,MAAZ,EAAoB;AAAA;;AAChB,aAAKC,OAAL,GAAeD,OAAOC,OAAtB;AACA,aAAKC,WAAL,GAAmB,KAAKD,OAAL,CAAaC,WAAhC;AACA,aAAKC,QAAL,GAAgB,KAAKF,OAAL,CAAaE,QAA7B;AACA,aAAKC,WAAL,GAAmBJ,OAAOI,WAA1B;AACA,aAAKC,MAAL;AACH;;;;4CAEoB;AACjB,mBAAO,KAAKH,WAAL,CAAiBI,OAAjB,CAAyB,KAAKF,WAA9B,CAAP;AACH;;;0CAEkB;AAAA;;AACf,mBAAO,KAAKG,iBAAL,GAAyBC,IAAzB,CAA8B,UAACC,EAAD,EAAQ;AACzC,uBAAO,IAAI,MAAKJ,MAAT,CAAgBI,EAAhB,EAAoB,MAAKR,OAAzB,CAAP;AACH,aAFM,CAAP;AAGH;;;mDAE0BS,E,EAAI;AAAA;;AAC3B,mBAAO,KAAKC,eAAL,GAAuBH,IAAvB,CAA4B,UAACI,GAAD,EAAS;AACxC,uBAAOA,IAAIC,gBAAJ,CAAqB;AACxBC,yBAAK,OAAKX,QAAL,CAAcO,EAAd;AADmB,iBAArB,CAAP;AAGH,aAJM,EAIJK,KAJI,CAIE,iBAAS;AACd,sBAAMC,KAAN;AACH,aANM,CAAP;AAOH;;;oDAE2BN,E,EAAI;AAC5B,gBAAIO,YAAYP,KAAK,KAAKP,QAAL,CAAcO,EAAd,CAAL,GAAyB,KAAKP,QAAL,EAAzC;;AAEA,mBAAO,KAAKQ,eAAL,GAAuBH,IAAvB,CAA4B,UAACI,GAAD,EAAS;AACxC,uBAAOA,IAAIM,iBAAJ,CAAsB;AACzBJ,yBAAKJ;AADoB,iBAAtB,CAAP;AAGH,aAJM,EAIJK,KAJI,CAIE,iBAAS;AACd,sBAAMC,KAAN;AACH,aANM,CAAP;AAOH;;;4CAEmBN,E,EAAI;AACpB,mBAAO,KAAKC,eAAL,GAAuBH,IAAvB,CAA4B,UAACI,GAAD,EAAS;AACxC,uBAAO,IAAIO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCT,wBAAIU,MAAJ,CAAW;AACPR,6BAAKJ;AADE,qBAAX,EAEG,UAACM,KAAD,EAAW;AACV,4BAAIA,SAAS,IAAb,EAAmB;AACfK,mCAAOL,KAAP;AACH,yBAFD,MAEO;AACHI;AACH;AACJ,qBARD;AAUH,iBAXM,CAAP;AAYH,aAbM,CAAP;AAcH;;;;;;kBAxDgBrB,iB","file":"FileSystemService.js","sourcesContent":["export default class FileSystemService {\n    constructor(config) {\n        this.mongodb = config.mongodb;\n        this.MongoClient = this.mongodb.MongoClient;\n        this.ObjectID = this.mongodb.ObjectID;\n        this.databaseUrl = config.databaseUrl;\n        this.GridFs;\n    }\n\n     _getDatabaseAsync() {\n        return this.MongoClient.connect(this.databaseUrl);\n    }\n\n     _getGridFsAsync() {\n        return this._getDatabaseAsync().then((db) => {\n            return new this.GridFs(db, this.mongodb);\n        });\n    }\n\n    getFileReadStreamByIdAsync(id) {\n        return this._getGridFsAsync().then((gfs) => {\n            return gfs.createReadStream({\n                _id: this.ObjectID(id)\n            });\n        }).catch(error => {\n            throw error;\n        });\n    }\n\n    getFileWriteStreamByIdAsync(id) {\n        let newFileId = id ? this.ObjectID(id) : this.ObjectID()\n\n        return this._getGridFsAsync().then((gfs) => {\n            return gfs.createWriteStream({\n                _id: id\n            });\n        }).catch(error => {\n            throw error;\n        });\n    }\n\n    removeFileByIdAsync(id) {\n        return this._getGridFsAsync().then((gfs) => {\n            return new Promise((resolve, reject) => {\n                gfs.remove({\n                    _id: id\n                }, (error) => {\n                    if (error != null) {\n                        reject(error);\n                    } else {\n                        resolve();\n                    }\n                });\n\n            });\n        });\n    }\n}"]}