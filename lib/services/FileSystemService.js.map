{"version":3,"sources":["../../src/services/FileSystemService.js"],"names":["FileSystemService","mongoDb","Error","id","getGridFsAsync","then","gfs","createReadStream","_id","ObjectID","catch","error","newFileId","createWriteStream","Promise","resolve","reject","remove"],"mappings":";;;;;;;;;;IAAqBA,iB;AACjB,+BAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAIA,WAAW,IAAf,EAAqB;AACjB,kBAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACH;;AAED,aAAKD,OAAL,GAAeA,OAAf;AACH;;;;mDAE0BE,E,EAAI;AAAA;;AAC3B,mBAAO,KAAKF,OAAL,CAAaG,cAAb,GAA8BC,IAA9B,CAAmC,UAACC,GAAD,EAAS;AAC/C,uBAAOA,IAAIC,gBAAJ,CAAqB;AACxBC,yBAAK,MAAKC,QAAL,CAAcN,EAAd;AADmB,iBAArB,CAAP;AAGH,aAJM,EAIJO,KAJI,CAIE,iBAAS;AACd,sBAAMC,KAAN;AACH,aANM,CAAP;AAOH;;;oDAE2BR,E,EAAI;AAC5B,gBAAIS,YAAYT,KAAK,KAAKM,QAAL,CAAcN,EAAd,CAAL,GAAyB,KAAKM,QAAL,EAAzC;;AAEA,mBAAO,KAAKR,OAAL,CAAaG,cAAb,GAA8BC,IAA9B,CAAmC,UAACC,GAAD,EAAS;AAC/C,uBAAOA,IAAIO,iBAAJ,CAAsB;AACzBL,yBAAKL;AADoB,iBAAtB,CAAP;AAGH,aAJM,EAIJO,KAJI,CAIE,iBAAS;AACd,sBAAMC,KAAN;AACH,aANM,CAAP;AAOH;;;4CAEmBR,E,EAAI;AACpB,mBAAO,KAAKF,OAAL,CAAaG,cAAb,GAA8BC,IAA9B,CAAmC,UAACC,GAAD,EAAS;AAC/C,uBAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,wBAAIW,MAAJ,CAAW;AACPT,6BAAKL;AADE,qBAAX,EAEG,UAACQ,KAAD,EAAW;AACV,4BAAIA,SAAS,IAAb,EAAmB;AACfK,mCAAOL,KAAP;AACH,yBAFD,MAEO;AACHI;AACH;AACJ,qBARD;AAUH,iBAXM,CAAP;AAYH,aAbM,CAAP;AAcH;;;;;;kBA9CgBf,iB","file":"FileSystemService.js","sourcesContent":["export default class FileSystemService {\n    constructor(mongoDb) {\n        if (mongoDb == null) {\n            throw new Error(\"Null Argument exception: There needs to be a MongoDb.\");\n        }\n\n        this.mongoDb = mongoDb;\n    }\n\n    getFileReadStreamByIdAsync(id) {\n        return this.mongoDb.getGridFsAsync().then((gfs) => {\n            return gfs.createReadStream({\n                _id: this.ObjectID(id)\n            });\n        }).catch(error => {\n            throw error;\n        });\n    }\n\n    getFileWriteStreamByIdAsync(id) {\n        let newFileId = id ? this.ObjectID(id) : this.ObjectID()\n\n        return this.mongoDb.getGridFsAsync().then((gfs) => {\n            return gfs.createWriteStream({\n                _id: id\n            });\n        }).catch(error => {\n            throw error;\n        });\n    }\n\n    removeFileByIdAsync(id) {\n        return this.mongoDb.getGridFsAsync().then((gfs) => {\n            return new Promise((resolve, reject) => {\n                gfs.remove({\n                    _id: id\n                }, (error) => {\n                    if (error != null) {\n                        reject(error);\n                    } else {\n                        resolve();\n                    }\n                });\n\n            });\n        });\n    }\n}"]}